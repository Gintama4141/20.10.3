{%
	import { cursor } from 'uci';
	import { access } from 'fs';
	
	let uci = cursor();
	let https_key = uci.get("uhttpd", "main", "key");
	let https_port = uci.get("uhttpd", "main", "listen_https");
	
	if (type(https_port) == "array" && length(https_port) > 0)
		https_port = https_port[0];
	
	let has_https = https_port && access(https_key);
	if (has_https && https_port)
		https_port = match(https_port, /(\d+)$/)?.[1];
-%}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
	<meta name="robots" content="noindex, nofollow">
	<meta name="referrer" content="no-referrer">
	<title>XIDZs-WRT</title>
	<link rel="stylesheet" href="/luci-static/argon/css/login.css">
	<link rel="shortcut icon" href="{{ media }}/favicon.ico">
</head>
<body>
	<div class="theme-toggle">
		<button class="theme-btn" id="b">DARK</button>
	</div>

	<form method="post" action="{{ entityencode(REQUEST_URI) }}">
		{% if (fuser): %}
		<div class="alert-message" id="a">
			Invalid username and/or password! Please try again.
		</div>
		{% endif %}

		<div class="login_form_container">
			<div class="login_form">
				<h2>XIDZs-WRT</h2>
				<div class="date-time">
					<span id="d"></span> | <span id="t"></span>
				</div>

				<div class="input_group">
					<input class="input_text" type="text" name="luci_username" placeholder="Username" value="{{ duser }}" required autofocus>
				</div>
				
				<div class="input_group">
					<input class="input_text" type="password" name="luci_password" placeholder="Password" required>
				</div>

				<input type="submit" value="LOGIN">
			</div>
		</div>
	</form>

	<script>
		// Prevent zoom
		document.addEventListener('wheel',e=>e.ctrlKey&&e.preventDefault(),{passive:!1});
		document.addEventListener('keydown',e=>(e.ctrlKey&&(e.key==='+'||e.key==='-'||e.key==='0'))&&e.preventDefault());

		// Theme switcher (6 tema: dark, light, neon, pulse, dual, glass)
		const T=['dark','light','neon','pulse','dual','glass'],B=document.getElementById('b'),D=document.body;
		let C=localStorage.theme||'dark';
		D.className=C;
		B.textContent=C.toUpperCase();
		B.onclick=()=>{
			C=T[(T.indexOf(C)+1)%6];
			D.className=C;
			B.textContent=C.toUpperCase();
			localStorage.theme=C
		};
		
		// Clock update
		const U=()=>{
			const N=new Date();
			const tEl=document.getElementById('t');
			const dEl=document.getElementById('d');
			if(tEl)tEl.textContent=N.toLocaleTimeString('id-ID',{hour:'2-digit',minute:'2-digit',second:'2-digit'});
			if(dEl&&!dEl.textContent)dEl.textContent=N.toLocaleDateString('id-ID',{weekday:'long',day:'numeric',month:'short',year:'numeric'})
		};
		U();
		setInterval(U,1000);
		
		// Auto hide alert message
		const A=document.getElementById('a');
		if(A){
			setTimeout(()=>{
				A.classList.add('fade-out');
				setTimeout(()=>A.remove(),300)
			},3000)
		}
	</script>

	{% if (has_https): %}
	<script>
		if(document.location.protocol!=='https:'){
			const img=new Image();
			const url=`https://${window.location.hostname}:{{ https_port }}{{ resource }}/icons/loading.gif?${Math.random()}`;
			img.onload=()=>window.location.href=`https://${window.location.hostname}:{{ https_port }}${window.location.pathname}`;
			img.src=url;
			setTimeout(()=>img.src='',240)
		}
	</script>
	{% endif %}
</body>
</html>